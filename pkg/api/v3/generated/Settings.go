// This file is generated by running `make generateAPI`
package generated

type Settings struct {
	Settings struct {
		AcquisitionSettings struct {
			AcquisitionBudget            int64    `json:"acquisitionBudget"`
			AcquisitionLimit             int64    `json:"acquisitionLimit"`
			AcquisitionType              string   `json:"acquisitionType"`
			IsUsingAcquisitionBudget     bool     `json:"isUsingAcquisitionBudget"`
			IsUsingVickeryRules          bool     `json:"isUsingVickeryRules"`
			MatchupAcquisitionLimit      int64    `json:"matchupAcquisitionLimit"`
			MatchupLimitPerScoringPeriod bool     `json:"matchupLimitPerScoringPeriod"`
			MinimumBid                   int64    `json:"minimumBid"`
			WaiverHours                  int64    `json:"waiverHours"`
			WaiverOrderReset             bool     `json:"waiverOrderReset"`
			WaiverProcessDays            []string `json:"waiverProcessDays"`
			WaiverProcessHour            int64    `json:"waiverProcessHour"`
		} `json:"acquisitionSettings"`
		DraftSettings struct {
			AuctionBudget     int64   `json:"auctionBudget"`
			AvailableDate     int64   `json:"availableDate"`
			Date              int64   `json:"date"`
			IsTradingEnabled  bool    `json:"isTradingEnabled"`
			KeeperCount       int64   `json:"keeperCount"`
			KeeperCountFuture int64   `json:"keeperCountFuture"`
			KeeperOrderType   string  `json:"keeperOrderType"`
			LeagueSubType     string  `json:"leagueSubType"`
			OrderType         string  `json:"orderType"`
			PickOrder         []int64 `json:"pickOrder"`
			TimePerSelection  int64   `json:"timePerSelection"`
			Type              string  `json:"type"`
		} `json:"draftSettings"`
		FinanceSettings struct {
			EntryFee           int64 `json:"entryFee"`
			MiscFee            int64 `json:"miscFee"`
			PerLoss            int64 `json:"perLoss"`
			PerTrade           int64 `json:"perTrade"`
			PlayerAcquisition  int64 `json:"playerAcquisition"`
			PlayerDrop         int64 `json:"playerDrop"`
			PlayerMoveToActive int64 `json:"playerMoveToActive"`
			PlayerMoveToIR     int64 `json:"playerMoveToIR"`
		} `json:"financeSettings"`
		IsCustomizable  bool   `json:"isCustomizable"`
		IsPublic        bool   `json:"isPublic"`
		Name            string `json:"name"`
		RestrictionType string `json:"restrictionType"`
		RosterSettings  struct {
			IsBenchUnlimited       bool   `json:"isBenchUnlimited"`
			IsUsingUndroppableList bool   `json:"isUsingUndroppableList"`
			LineupLocktimeType     string `json:"lineupLocktimeType"`
			LineupSlotCounts       struct {
				Zero  int64 `json:"0"`
				One   int64 `json:"1"`
				One0  int64 `json:"10"`
				One1  int64 `json:"11"`
				One2  int64 `json:"12"`
				One3  int64 `json:"13"`
				One4  int64 `json:"14"`
				One5  int64 `json:"15"`
				One6  int64 `json:"16"`
				One7  int64 `json:"17"`
				One8  int64 `json:"18"`
				One9  int64 `json:"19"`
				Two   int64 `json:"2"`
				Two0  int64 `json:"20"`
				Two1  int64 `json:"21"`
				Two2  int64 `json:"22"`
				Two3  int64 `json:"23"`
				Two4  int64 `json:"24"`
				Three int64 `json:"3"`
				Four  int64 `json:"4"`
				Five  int64 `json:"5"`
				Six   int64 `json:"6"`
				Seven int64 `json:"7"`
				Eight int64 `json:"8"`
				Nine  int64 `json:"9"`
			} `json:"lineupSlotCounts"`
			MoveLimit      int64 `json:"moveLimit"`
			PositionLimits struct {
				Zero  int64 `json:"0"`
				One   int64 `json:"1"`
				One0  int64 `json:"10"`
				One1  int64 `json:"11"`
				One2  int64 `json:"12"`
				One3  int64 `json:"13"`
				One4  int64 `json:"14"`
				One5  int64 `json:"15"`
				One6  int64 `json:"16"`
				One7  int64 `json:"17"`
				Two   int64 `json:"2"`
				Three int64 `json:"3"`
				Four  int64 `json:"4"`
				Five  int64 `json:"5"`
				Six   int64 `json:"6"`
				Seven int64 `json:"7"`
				Eight int64 `json:"8"`
				Nine  int64 `json:"9"`
			} `json:"positionLimits"`
			RosterLocktimeType string  `json:"rosterLocktimeType"`
			UniverseIds        []int64 `json:"universeIds"`
		} `json:"rosterSettings"`
		ScheduleSettings struct {
			Divisions []struct {
				ID   int64  `json:"id"`
				Name string `json:"name"`
				Size int64  `json:"size"`
			} `json:"divisions"`
			MatchupPeriodCount  int64 `json:"matchupPeriodCount"`
			MatchupPeriodLength int64 `json:"matchupPeriodLength"`
			MatchupPeriods      struct {
				One   []int64 `json:"1"`
				One0  []int64 `json:"10"`
				One1  []int64 `json:"11"`
				One2  []int64 `json:"12"`
				One3  []int64 `json:"13"`
				One4  []int64 `json:"14"`
				One5  []int64 `json:"15"`
				Two   []int64 `json:"2"`
				Three []int64 `json:"3"`
				Four  []int64 `json:"4"`
				Five  []int64 `json:"5"`
				Six   []int64 `json:"6"`
				Seven []int64 `json:"7"`
				Eight []int64 `json:"8"`
				Nine  []int64 `json:"9"`
			} `json:"matchupPeriods"`
			PeriodTypeID               int64  `json:"periodTypeId"`
			PlayoffMatchupPeriodLength int64  `json:"playoffMatchupPeriodLength"`
			PlayoffSeedingRule         string `json:"playoffSeedingRule"`
			PlayoffSeedingRuleBy       int64  `json:"playoffSeedingRuleBy"`
			PlayoffTeamCount           int64  `json:"playoffTeamCount"`
		} `json:"scheduleSettings"`
		ScoringSettings struct {
			AllowOutOfPositionScoring bool   `json:"allowOutOfPositionScoring"`
			HomeTeamBonus             int64  `json:"homeTeamBonus"`
			MatchupTieRule            string `json:"matchupTieRule"`
			MatchupTieRuleBy          int64  `json:"matchupTieRuleBy"`
			PlayerRankType            string `json:"playerRankType"`
			PlayoffHomeTeamBonus      int64  `json:"playoffHomeTeamBonus"`
			PlayoffMatchupTieRule     string `json:"playoffMatchupTieRule"`
			PlayoffMatchupTieRuleBy   int64  `json:"playoffMatchupTieRuleBy"`
			ScoringItems              []struct {
				IsReverseItem   bool  `json:"isReverseItem"`
				LeagueRanking   int64 `json:"leagueRanking"`
				LeagueTotal     int64 `json:"leagueTotal"`
				Points          int64 `json:"points"`
				PointsOverrides struct {
					One6 int64 `json:"16"`
				} `json:"pointsOverrides"`
				StatID int64 `json:"statId"`
			} `json:"scoringItems"`
			ScoringType string `json:"scoringType"`
		} `json:"scoringSettings"`
		Size          int64 `json:"size"`
		TradeSettings struct {
			AllowOutOfUniverse bool  `json:"allowOutOfUniverse"`
			DeadlineDate       int64 `json:"deadlineDate"`
			Max                int64 `json:"max"`
			RevisionHours      int64 `json:"revisionHours"`
			VetoVotesRequired  int64 `json:"vetoVotesRequired"`
		} `json:"tradeSettings"`
	} `json:"settings"`
}
